# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: firestore

on:
  pull_request:
    paths:
    # Firestore sources
    - 'Firestore/**'

    # Podspec
    - 'FirebaseFirestore.podspec'

    # CMake
    - 'CMakeLists.txt'
    - 'cmake/**'

    # This workflow
    - '.github/workflows/firestore.yml'

  schedule:
    # Run every day at 11pm (PST) - cron uses UTC times
    - cron:  '0 7 * * *'

jobs:
  firestore-macos-cmake:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2

    # Run source checks inline in the first job. For maximum compatibility with
    # the rest of the Firebase builds, this should run-on: macos-latest.
    - name: Setup checks
      run:  scripts/setup_check.sh

    - name: Run checks
      run:  scripts/check.sh --test-only

    - name: Ccache
      uses: actions/cache@v1
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-ccache-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-ccache-

    - name: Setup build
      run:  scripts/install_prereqs.sh Firestore ${{ runner.os }} cmake

    - name: Build and test
      run:  scripts/third_party/travis/retry.sh scripts/build.sh Firestore ${{ runner.os }} cmake


  # All other jobs depend on firestore-macos-cmake. This avoids wasting
  # resources if the build is just generally broken at the expense of some
  # latency.
  firestore-linux-cmake:
    runs-on: ubuntu-latest
    needs: firestore-macos-cmake

    steps:
    - uses: actions/checkout@v2

    - name: Setup build
      run:  scripts/install_prereqs.sh Firestore ${{ runner.os }} cmake

    - name: Build and test
      run:  scripts/third_party/travis/retry.sh scripts/build.sh Firestore ${{ runner.os }} cmake
